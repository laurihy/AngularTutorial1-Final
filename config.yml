# -------------------------------------------------------------------
# Backlift config.yml file. This file can be used to customize how 
# your application is packaged when you run backlift push.
# -------------------------------------------------------------------

# compile: Backlift will select an appropriate compiler for each file 
# that matches one of the patterns below. The file types that backlift 
# recognizes are:
#   *.jst        -> underscore templates (outputs .js files)
#   *.handlebars -> handlebars templates (outputs .js files)
#   *.less       -> lessc css compiler (outputs .css files)
#   *.coffee     -> coffeescript compiler (outputs .js files)
#
# Uncomment this block to customize which files will be compiled:

# compile:
# - public/**/*.jst
# - public/**/*.handlebars
# - public/**/bootstrap*.less
# - public/**/*.coffee


# scripts: These javascript files will be packaged and linked in 
# order. File paths should be specified relative to the project root.
# They should not be compressed. The * will match any string and **
# will match any folder.

scripts:
- /scripts/backlift-reloader.js
- /lib/angular/angular.js
- /lib/angular/angular-resource.js
- /**/*.js


# styles: These stylesheets will be packaged and linked in order, 
# similar to scripts.

styles:
- styles/*.css


# optimize: The optimize flag controls whether or not backlift 
# concatenates and minifies .js and .css files. The optimizer is slow
# and produces obfuscated code that cannot be easily debugged. For 
# these reasons, optimization should be disabled during development

# optimize: no


# autoroute: the automatic routing feature is useful for single-page 
# websites that implement their own javascript routing. If autoroute
# is set to 'yes', all requests to URLs that don't match a file or API 
# endpoint will be routed to the index.html file. Default is 'no'.

autoroute: yes
